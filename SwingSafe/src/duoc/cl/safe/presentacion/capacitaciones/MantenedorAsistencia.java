/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package duoc.cl.safe.presentacion.capacitaciones;

import duoc.cl.safe.entity.SsfAlumnocapaempresa;
import duoc.cl.safe.entity.SsfAsistencia;
import duoc.cl.safe.entity.SsfCapacitacionempresa;
import duoc.cl.safe.entity.SsfCapacitaciondia;
import duoc.cl.safe.herramientas.FormsController;
import duoc.cl.safe.herramientas.Utilidad;
import duoc.cl.safe.negocio.SsfAsistenciaBO;
import duoc.cl.safe.negocio.SsfCapacitacionempresaBO;
import duoc.cl.safe.negocio.SsfCapacitaciondiaBO;
import java.math.BigDecimal;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;
import org.apache.log4j.Level;
import org.apache.log4j.PropertyConfigurator;

/**
 *
 * @author Nacho
 */
public class MantenedorAsistencia extends javax.swing.JFrame {

    /**
     * Creates new form MantenedorDía capacitación
     */
    public MantenedorAsistencia() {
        initComponents();
        PropertyConfigurator.configure("log4j.properties");
        resizeTabla();
        resizeTablaAlum();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCapacitacionDia = new javax.swing.JTable();
        lExito = new javax.swing.JLabel();
        lError = new javax.swing.JLabel();
        tbEstado = new javax.swing.JToggleButton();
        bModificar = new javax.swing.JButton();
        bAgregar = new javax.swing.JButton();
        bLimpiar = new javax.swing.JButton();
        cbCapEmpresa = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfEstadoCap = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tfDia = new javax.swing.JTextField();
        bRefrescar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblAlumnos = new javax.swing.JTable();
        bGuardarAsistencia = new javax.swing.JButton();
        cbBuscarID = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tblCapacitacionDia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Día", "Capacitación Empresa", "Estado Capacitación", "Fecha Creación", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Short.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCapacitacionDia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCapacitacionDiaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblCapacitacionDia);

        lExito.setForeground(new java.awt.Color(0, 102, 0));

        lError.setForeground(new java.awt.Color(204, 0, 0));

        tbEstado.setText("Activo");
        tbEstado.setEnabled(false);
        tbEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbEstadoActionPerformed(evt);
            }
        });

        bModificar.setText("Modificar");
        bModificar.setEnabled(false);
        bModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bModificarActionPerformed(evt);
            }
        });

        bAgregar.setText("Agregar");
        bAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAgregarActionPerformed(evt);
            }
        });

        bLimpiar.setText("Limpiar");
        bLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLimpiarActionPerformed(evt);
            }
        });

        cbCapEmpresa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Seleccione Capacitación Empresa -" }));
        cbCapEmpresa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbCapEmpresaMouseClicked(evt);
            }
        });
        cbCapEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCapEmpresaActionPerformed(evt);
            }
        });

        jLabel3.setText("Capacitación Empresa:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 0, 102));
        jLabel8.setText("Mantenedor Asistencia");

        jLabel6.setText("Estado Capacitación:");

        tfEstadoCap.setEditable(false);
        tfEstadoCap.setBackground(new java.awt.Color(204, 204, 255));

        jLabel7.setText("Día:");

        tfDia.setText("dd-MM-aaaa");
        tfDia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tfDiaMousePressed(evt);
            }
        });

        bRefrescar.setText("Refrescar");
        bRefrescar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRefrescarActionPerformed(evt);
            }
        });

        tblAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "RUT", "Nombre", "Apellidos", "Asiste"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAlumnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAlumnosMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblAlumnosMousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(tblAlumnos);

        bGuardarAsistencia.setText("Guardar Asistencia");
        bGuardarAsistencia.setEnabled(false);
        bGuardarAsistencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGuardarAsistenciaActionPerformed(evt);
            }
        });

        cbBuscarID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- ID -" }));
        cbBuscarID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBuscarIDActionPerformed(evt);
            }
        });

        jLabel1.setText("Buscar Capacitación Empresa:");

        jMenu1.setText("Cargando...");
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel7))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(tfDia, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(tfEstadoCap, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(0, 106, Short.MAX_VALUE))
                                            .addComponent(cbCapEmpresa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lExito, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(9, 9, 9)
                                        .addComponent(bAgregar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bModificar)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bLimpiar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(bRefrescar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tbEstado, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))
                                .addGap(86, 86, 86))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbBuscarID, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bGuardarAsistencia, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbCapEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(cbBuscarID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfEstadoCap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(bRefrescar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bAgregar)
                            .addComponent(bLimpiar)
                            .addComponent(bModificar)
                            .addComponent(tbEstado)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(tfDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lExito, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lError, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(bGuardarAsistencia))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        //this.setJMenuBar(formsController.getMenu().getMenuBar());
        //formsController.getMenu().setjFrame(this);
        this.setLocationRelativeTo(null);
        cargaTabla();
        cargaCapEmpresa();
        cargaBuscaID();
        Inicializar();
    }//GEN-LAST:event_formWindowOpened

    private void tblCapacitacionDiaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCapacitacionDiaMouseClicked

        limpiarMsgs();
        tbEstado.setEnabled(true);
        bModificar.setEnabled(true);
        DefaultTableModel model = (DefaultTableModel) tblCapacitacionDia.getModel();

        if (Integer.parseInt(model.getValueAt(tblCapacitacionDia.getSelectedRow(), 5).toString()) == 1) {
            tbEstado.setSelected(false);
            activarEstado();
        } else {
            tbEstado.setSelected(true);
            desactivarEstado();
        }
        if (model.getValueAt(tblCapacitacionDia.getSelectedRow(), 1) != null) {
            if (model.getValueAt(tblCapacitacionDia.getSelectedRow(), 1).toString().trim().isEmpty()) {
                tfDia.setText("dd-MM-aaaa");
            } else {
                tfDia.setText(model.getValueAt(tblCapacitacionDia.getSelectedRow(), 1).toString());
            }
        } else {
            tfDia.setText("dd-MM-aaaa");
        }
        if (model.getValueAt(tblCapacitacionDia.getSelectedRow(), 2) != null) {
            cbCapEmpresa.setSelectedItem(model.getValueAt(tblCapacitacionDia.getSelectedRow(), 2).toString());
        } else {
            cbCapEmpresa.setSelectedIndex(0);
        }
        if (model.getValueAt(tblCapacitacionDia.getSelectedRow(), 3) != null) {
            tfEstadoCap.setText(model.getValueAt(tblCapacitacionDia.getSelectedRow(), 3).toString());
        } else {
            tfEstadoCap.setText("");
        }
        cargaAlumnos(Integer.parseInt(model.getValueAt(tblCapacitacionDia.getSelectedRow(), 0).toString()));
    }//GEN-LAST:event_tblCapacitacionDiaMouseClicked

    private void bLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLimpiarActionPerformed
        limpiarMsgs();
        btnLimpiar();
    }//GEN-LAST:event_bLimpiarActionPerformed

    private void tbEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbEstadoActionPerformed
        limpiarMsgs();
        DefaultTableModel model = (DefaultTableModel) tblCapacitacionDia.getModel();
        cdbo = new SsfCapacitaciondiaBO();

        if (tblCapacitacionDia.getSelectedRow() == -1) {
            tbEstado.setEnabled(false);
            if (tblCapacitacionDia.getRowCount() == 0) {
                lError.setText("Tabla vacía");
            } else {
                lError.setText("No hay fila seleccionada");
            }
        } else {
            int id = Short.parseShort(model.getValueAt(tblCapacitacionDia.getSelectedRow(), 0).toString());
            if (!tbEstado.isSelected()) {
                if (cdbo.activarSP(id)) {
                    activarEstado();
                    model.setValueAt("1", tblCapacitacionDia.getSelectedRow(), 5);
                }
            } else {
                if (cdbo.desactivarSP(id)) {
                    desactivarEstado();
                    model.setValueAt("0", tblCapacitacionDia.getSelectedRow(), 5);
                }
            }
        }
    }//GEN-LAST:event_tbEstadoActionPerformed

    private void bAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAgregarActionPerformed
        cdbo = new SsfCapacitaciondiaBO();
        limpiarMsgs();
        if (tfDia.getText().trim().isEmpty()) {
            lError.setText("Día capacitación no puede quedar en blanco");
        } else if (cbCapEmpresa.getSelectedIndex() == 0) {
            lError.setText("Seleccione una capacitación empresa");
        } else {
            String sfech;
            Date fecha = null;
            sfech = tfDia.getText();
            SsfCapacitacionempresa ce = (SsfCapacitacionempresa) mapce.get(cbCapEmpresa.getSelectedItem().toString());
            SsfCapacitaciondia c = new SsfCapacitaciondia();
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
            try {
                if (!sfech.isEmpty() && !sfech.toLowerCase().equals("dd-MM-aaaa".toLowerCase())) {
                    if (sfech.length() < 10) {
                        sdf = new SimpleDateFormat("dd-MM-yy");
                    }
                    fecha = sdf.parse(sfech);
                    c.setDia(fecha);
                }
            } catch (ParseException ex) {
                log.log(Level.ERROR, "Error en formato de día", ex);
                lError.setText("Error en formato de día");
            }
            c.setIdCapaempresa(new SsfCapacitacionempresa(ce.getId()));
            if (cdbo.addSP(c)) {
                lExito.setText("Día capacitación agregada exitosamente.");
                cargaTabla();
            } else {
                lError.setText("No se pudo agregar");
            }
        }
    }//GEN-LAST:event_bAgregarActionPerformed

    private void bModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bModificarActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblCapacitacionDia.getModel();
        cdbo = new SsfCapacitaciondiaBO();
        limpiarMsgs();
        if (tblCapacitacionDia.getSelectedRow() == -1) {
            tbEstado.setEnabled(false);
            if (tblCapacitacionDia.getRowCount() == 0) {
                lError.setText("Tabla vacía");
            } else {
                lError.setText("No hay fila seleccionada");
            }
        } else {
            if (tfDia.getText().trim().isEmpty()) {
                lError.setText("Día capacitación no puede quedar en blanco");
            } else if (cbCapEmpresa.getSelectedIndex() == 0) {
                lError.setText("Seleccione una capacitación empresa");
            } else {
                String sfech, id;
                id = model.getValueAt(tblCapacitacionDia.getSelectedRow(), 0).toString();
                sfech = tfDia.getText().trim();
                SsfCapacitacionempresa ce = (SsfCapacitacionempresa) mapce.get(cbCapEmpresa.getSelectedItem().toString());
                SsfCapacitaciondia c = cdbo.findSP(Integer.valueOf(id));
                Date fecha = null;
                SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
                if (!sfech.isEmpty() && !sfech.toLowerCase().equals("dd-MM-aaaa".toLowerCase())) {
                    try {

                        if (sfech.length() < 10) {
                            sdf = new SimpleDateFormat("dd-MM-yy");
                        }
                        fecha = sdf.parse(sfech);
                        c.setDia(fecha);

                    } catch (ParseException ex) {
                        log.log(Level.ERROR, "Error en formato de día", ex);
                        sfech = "error";
                        lError.setText("Error en formato de día");
                    }
                }
                //c.setId(BigDecimal.valueOf(Long.valueOf(id)));
                c.setIdCapaempresa(new SsfCapacitacionempresa(ce.getId()));
                if (cdbo.updateSP(c)) {
                    lExito.setText("Día capacitación modificada exitosamente.");
                    if (!sfech.equals("error") && !sfech.isEmpty() && fecha != null) {
                        sdf = new SimpleDateFormat("dd-MM-yyyy");
                        model.setValueAt(sdf.format(fecha), tblCapacitacionDia.getSelectedRow(), 1);
                    }
                    model.setValueAt(cbCapEmpresa.getSelectedItem(), tblCapacitacionDia.getSelectedRow(), 2);
                } else {
                    lError.setText("No se pudo modificar");
                }
            }
        }
    }//GEN-LAST:event_bModificarActionPerformed

    private void bRefrescarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRefrescarActionPerformed
        btnLimpiar();
        cargaTabla();
    }//GEN-LAST:event_bRefrescarActionPerformed

    private void cbCapEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCapEmpresaActionPerformed
        if (cbCapEmpresa.getSelectedIndex() != 0) {
            SsfCapacitacionempresa ce = (SsfCapacitacionempresa) mapce.get(cbCapEmpresa.getSelectedItem().toString());
            tfEstadoCap.setText(ce.getIdEstadocapacitacion().getEstadocapaemp());
        } else {
            tfEstadoCap.setText("");
        }
    }//GEN-LAST:event_cbCapEmpresaActionPerformed

    private void tblAlumnosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAlumnosMouseClicked
        DefaultTableModel model = (DefaultTableModel) tblAlumnos.getModel();
        if (model.getValueAt(tblAlumnos.getSelectedRow(), 4).toString().contains("ASISTE")) {
            model.setValueAt("<html><font color='red'><b>AUSENTE</b></font></html>", tblAlumnos.getSelectedRow(), 4);
        } else {
            model.setValueAt("<html><font color='green'><b>ASISTE</b></font></html>", tblAlumnos.getSelectedRow(), 4);
        }
    }//GEN-LAST:event_tblAlumnosMouseClicked

    private void cbCapEmpresaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbCapEmpresaMouseClicked
        limpiarMsgs();
    }//GEN-LAST:event_cbCapEmpresaMouseClicked

    private void bGuardarAsistenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGuardarAsistenciaActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblAlumnos.getModel();
        DefaultTableModel model1 = (DefaultTableModel) tblCapacitacionDia.getModel();
        limpiarMsgs();
        if (tblCapacitacionDia.getSelectedRow() == -1) {
            tbEstado.setEnabled(false);
            if (tblCapacitacionDia.getRowCount() == 0) {
                lError.setText("Tabla vacía");
            } else {
                lError.setText("No hay fila seleccionada");
            }
        } else {
            int contador = 1;
            String idCapacitaciondia = model1.getValueAt(tblCapacitacionDia.getSelectedRow(), 0).toString();
            for (int i = 0; i < model.getRowCount(); i++) {
                int idace;
                Short asiste;
                idace = Integer.parseInt(model.getValueAt(i, 0).toString());
                if (model.getValueAt(i, 4).toString().contains("ASISTE")) {
                    asiste = 1;
                } else {
                    asiste = 0;
                }
                SsfAsistencia as = existeAsiste(idace, Integer.parseInt(idCapacitaciondia));
                if (as == null) {
                    as = new SsfAsistencia();
                    as.setAsiste(asiste);
                    as.setIdAlumcapaempresa(new SsfAlumnocapaempresa(BigDecimal.valueOf((long) Long.valueOf(idace))));
                    as.setIdCapacitaciondia(new SsfCapacitaciondia(BigDecimal.valueOf((long) Long.valueOf(idCapacitaciondia))));
                    if (new SsfAsistenciaBO().addSP(as)) {
                        lExito.setText("Agregadas asistencias para " + contador + " alumnos");
                        contador++;
                    } else {
                        lError.setText("Error al registrar asistencias");
                    }
                } else {
                    as.setAsiste(asiste);
                    if (new SsfAsistenciaBO().updateSP(as)) {
                        lExito.setText("Modificadas asistencias para " + contador + " alumnos");
                        contador++;
                    } else {
                        lError.setText("Error al modificar asistencias");
                    }
                }
            }
            /*
            SsfCapacitacionempresa ce = (SsfCapacitacionempresa) mapce.get(cbCapEmpresa.getSelectedItem().toString());
            contador--;
            ce.setCantidadAlumnos(new Long(contador));
            new SsfCapacitacionempresaBO().updateSP(ce);
            System.out.println("update cap empresa cantidad alumnos");*/
            
            //refresh
            Inicializar();
            
        }
        
        cargaTabla();
        cargaTablaBuscaID(mapce2.get(cbBuscarID.getSelectedItem().toString()));
    }//GEN-LAST:event_bGuardarAsistenciaActionPerformed

    private void tblAlumnosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAlumnosMousePressed
        limpiarMsgs();
    }//GEN-LAST:event_tblAlumnosMousePressed

    private void tfDiaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfDiaMousePressed
        limpiarMsgs();
    }//GEN-LAST:event_tfDiaMousePressed

    private void cbBuscarIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBuscarIDActionPerformed
        if (cbBuscarID.getSelectedIndex() != 0) {
            cargaTablaBuscaID(mapce2.get(cbBuscarID.getSelectedItem().toString()));
        }
        btnLimpiar();
    }//GEN-LAST:event_cbBuscarIDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MantenedorAsistencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MantenedorAsistencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MantenedorAsistencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MantenedorAsistencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MantenedorAsistencia().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAgregar;
    private javax.swing.JButton bGuardarAsistencia;
    private javax.swing.JButton bLimpiar;
    private javax.swing.JButton bModificar;
    private javax.swing.JButton bRefrescar;
    private javax.swing.JComboBox<String> cbBuscarID;
    private javax.swing.JComboBox<String> cbCapEmpresa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lError;
    private javax.swing.JLabel lExito;
    private javax.swing.JToggleButton tbEstado;
    private javax.swing.JTable tblAlumnos;
    private javax.swing.JTable tblCapacitacionDia;
    private javax.swing.JTextField tfDia;
    private javax.swing.JTextField tfEstadoCap;
    // End of variables declaration//GEN-END:variables

    private SsfCapacitaciondiaBO cdbo;
    private HashMap<String, SsfCapacitacionempresa> mapce = new HashMap<>();
    private HashMap<String, Integer> mapce2 = new HashMap<>();
    private static Logger log = Logger.getLogger(MantenedorAsistencia.class.getName());
    private FormsController formsController;
    private List<SsfAsistencia> las;
    private List<SsfCapacitaciondia> lcd;
    private List<SsfCapacitacionempresa> lce;

    public void cargaCapEmpresa() {
        mapce = null;
        mapce = new HashMap<>();
        cbCapEmpresa.removeAll();

        SsfCapacitacionempresaBO cebo = new SsfCapacitacionempresaBO();
        List<SsfCapacitacionempresa> celist = null;
        celist = cebo.getAllSP();
        celist.forEach((ce) -> {
            mapce.put("ID: " + ce.getId()
                    + ". " + ce.getIdCapacitacion().getNombre()
                    + ". " + ce.getIdEmpresa().getNombre(), ce);
        });
        celist.forEach((ce) -> {
            cbCapEmpresa.setSelectedIndex(0);
            cbCapEmpresa.setSelectedItem("ID: " + ce.getId()
                    + ". " + ce.getIdCapacitacion().getNombre()
                    + ". " + ce.getIdEmpresa().getNombre());
            if (cbCapEmpresa.getSelectedIndex() == 0) {
                cbCapEmpresa.addItem("ID: " + ce.getId()
                        + ". " + ce.getIdCapacitacion().getNombre()
                        + ". " + ce.getIdEmpresa().getNombre());
            }
        });
        cbCapEmpresa.setSelectedIndex(0);
        //System.out.println("tblCapacitacionDia.getSelectedRow(): "+tblCapacitacionDia.getSelectedRow());
        DefaultTableModel model = (DefaultTableModel) tblCapacitacionDia.getModel();
        if (tblCapacitacionDia.getSelectedRow() != -1) {
            cbCapEmpresa.setSelectedItem(model.getValueAt(tblCapacitacionDia.getSelectedRow(), 2));
        }

    }

    public void cargaBuscaID() {
        List<SsfCapacitacionempresa> celist = new SsfCapacitacionempresaBO().getAllSP();
        celist.forEach((ce) -> {
            mapce2.put("ID: " + ce.getId(), ce.getId().intValue());
        });
        celist.forEach((ce) -> {
            cbBuscarID.addItem("ID: " + ce.getId());
        });
    }

    private void cargaTabla() {
        DefaultTableModel model = (DefaultTableModel) tblCapacitacionDia.getModel();
        model.setRowCount(0);
        cdbo = new SsfCapacitaciondiaBO();
        lcd = cdbo.getAllSP();
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        String sfecha = null;
        for (SsfCapacitaciondia c : lcd) {
            if (c.getDia() != null) {
                sfecha = sdf.format(c.getDia());
            } else {
                sfecha = "";
            }
            model.addRow(new Object[]{c.getId(), sfecha, "ID: " + c.getIdCapaempresa().getId()
                + ". " + c.getIdCapaempresa().getIdCapacitacion().getNombre()
                + ". " + c.getIdCapaempresa().getIdEmpresa().getNombre(),
                c.getIdCapaempresa().getIdEstadocapacitacion().getEstadocapaemp(),
                sdf.format(c.getFechCreacion()), c.getEstado()});
        }
        btnLimpiar();
    }

    private void desactivarEstado() {
        tbEstado.setText("Desactivado");
        tbEstado.setBackground(new java.awt.Color(255, 51, 51));
    }

    private void activarEstado() {
        tbEstado.setText("Activo");
        tbEstado.setBackground(new java.awt.Color(0, 204, 102));
    }

    private void limpiarMsgs() {
        lExito.setText("");
        lError.setText("");
    }

    public void setFormsController(FormsController formsController) {
        this.formsController = formsController;
    }

    private void resizeTabla() {
        tblCapacitacionDia.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        tblCapacitacionDia.getColumnModel().getColumn(0).setMaxWidth(40);
        tblCapacitacionDia.getColumnModel().getColumn(1).setMaxWidth(120);
        tblCapacitacionDia.getColumnModel().getColumn(2).setMaxWidth(300);
        tblCapacitacionDia.getColumnModel().getColumn(3).setMaxWidth(200);
        tblCapacitacionDia.getColumnModel().getColumn(4).setMaxWidth(120);
        tblCapacitacionDia.getColumnModel().getColumn(5).setMaxWidth(50);
    }

    private void resizeTablaAlum() {
        tblAlumnos.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        tblAlumnos.getColumnModel().getColumn(0).setMaxWidth(40);
        tblAlumnos.getColumnModel().getColumn(1).setMaxWidth(110);
        tblAlumnos.getColumnModel().getColumn(2).setMaxWidth(120);
        tblAlumnos.getColumnModel().getColumn(3).setMaxWidth(150);
        tblAlumnos.getColumnModel().getColumn(4).setMaxWidth(250);
    }

    private void cargaAlumnos(int idcd) {
        DefaultTableModel model = (DefaultTableModel) tblAlumnos.getModel();
        model.setRowCount(0);
        bGuardarAsistencia.setEnabled(false);
        String asistencia = "<html><font color='blue'><b>PULSE PARA MODIFICAR</b></font></html>";

        SsfCapacitaciondia capdia = null;
        for (SsfCapacitaciondia cd : lcd) {
            if (Integer.parseInt(cd.getId().toString()) == idcd) {
                capdia = cd;
            }
        }
        // Si tiene alumnos asociados
        if (capdia.getIdCapaempresa().getSsfAlumnocapaempresaList() != null && !capdia.getIdCapaempresa().getSsfAlumnocapaempresaList().isEmpty()) {
            for (SsfAlumnocapaempresa ace : capdia.getIdCapaempresa().getSsfAlumnocapaempresaList()) {
                //Si tiene lista de asistencia ingresada
                if (capdia.getSsfAsistenciaList() != null && !capdia.getSsfAsistenciaList().isEmpty()) {
                    for (SsfAsistencia a : capdia.getSsfAsistenciaList()) {
                        if (a.getIdAlumcapaempresa().getId() == ace.getId()) {
                            if (a.getAsiste() == 1) {
                                asistencia = "<html><font color='green'><b>ASISTE</b></font></html>";
                            } else {
                                asistencia = "<html><font color='red'><b>AUSENTE</b></font></html>";
                            }
                            model.addRow(new Object[]{ace.getId(), Utilidad.formatRutSalida(ace.getIdAlumno().getIdPersona().getRut()),
                                ace.getIdAlumno().getIdPersona().getNombre(), ace.getIdAlumno().getIdPersona().getApPaterno() + " " + ace.getIdAlumno().getIdPersona().getApMaterno(),
                                asistencia});
                        }
                    }
                } else {
                    //Si NO tiene lista de asistencia ingresada
                    model.addRow(new Object[]{ace.getId(), Utilidad.formatRutSalida(ace.getIdAlumno().getIdPersona().getRut()),
                        ace.getIdAlumno().getIdPersona().getNombre(), ace.getIdAlumno().getIdPersona().getApPaterno() + " " + ace.getIdAlumno().getIdPersona().getApMaterno(),
                        asistencia});
                }
            }
        } else {
            //Si no hay alumnos asociados
            lError.setText("No hay lista de alumnos");
        }
        if (model.getRowCount() > 0) {
            bGuardarAsistencia.setEnabled(true);
        }
    }

    private SsfAsistencia existeAsiste(int idace, int idcapdia) {
        if (las == null) {
            las = new SsfAsistenciaBO().getAllSP();
        }
        for (SsfAsistencia as : las) {
            if (Integer.parseInt(as.getIdAlumcapaempresa().getId().toString()) == idace
                    && Integer.parseInt(as.getIdCapacitaciondia().getId().toString()) == idcapdia) {
                return as;
            }
        }
        return null;
    }

    private void btnLimpiar() {
        tbEstado.setEnabled(false);
        bModificar.setEnabled(false);

        tblCapacitacionDia.clearSelection();
        tblAlumnos.clearSelection();
        DefaultTableModel model = (DefaultTableModel) tblAlumnos.getModel();
        model.setRowCount(0);
        tfDia.setText("dd-MM-aaaa");
        cbCapEmpresa.setSelectedIndex(0);
        bGuardarAsistencia.setEnabled(false);
    }

    private void cargaTablaBuscaID(Integer idcapemp) {
        if (lcd == null) {
            lcd = new SsfCapacitaciondiaBO().getAllSP();
        }

        DefaultTableModel model = (DefaultTableModel) tblCapacitacionDia.getModel();
        model.setRowCount(0);
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        String sfecha;
        for (SsfCapacitaciondia c : lcd) {
            if (c.getIdCapaempresa().getId().intValue() == idcapemp) {
                if (c.getDia() != null) {
                    sfecha = sdf.format(c.getDia());
                } else {
                    sfecha = "";
                }
                model.addRow(new Object[]{c.getId(), sfecha, "ID: " + c.getIdCapaempresa().getId()
                    + ". " + c.getIdCapaempresa().getIdCapacitacion().getNombre()
                    + ". " + c.getIdCapaempresa().getIdEmpresa().getNombre(),
                    c.getIdCapaempresa().getIdEstadocapacitacion().getEstadocapaemp(),
                    sdf.format(c.getFechCreacion()), c.getEstado()});
            }
        }
    }

    private void Inicializar() {
        las = new SsfAsistenciaBO().getAllSP();
        lcd = new SsfCapacitaciondiaBO().getAllSP();
        lce = new SsfCapacitacionempresaBO().getAllSP();
    }

}
